import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateChatTokenCommandInput,
  CreateChatTokenCommandOutput,
} from "./commands/CreateChatTokenCommand";
import {
  CreateLoggingConfigurationCommandInput,
  CreateLoggingConfigurationCommandOutput,
} from "./commands/CreateLoggingConfigurationCommand";
import {
  CreateRoomCommandInput,
  CreateRoomCommandOutput,
} from "./commands/CreateRoomCommand";
import {
  DeleteLoggingConfigurationCommandInput,
  DeleteLoggingConfigurationCommandOutput,
} from "./commands/DeleteLoggingConfigurationCommand";
import {
  DeleteMessageCommandInput,
  DeleteMessageCommandOutput,
} from "./commands/DeleteMessageCommand";
import {
  DeleteRoomCommandInput,
  DeleteRoomCommandOutput,
} from "./commands/DeleteRoomCommand";
import {
  DisconnectUserCommandInput,
  DisconnectUserCommandOutput,
} from "./commands/DisconnectUserCommand";
import {
  GetLoggingConfigurationCommandInput,
  GetLoggingConfigurationCommandOutput,
} from "./commands/GetLoggingConfigurationCommand";
import {
  GetRoomCommandInput,
  GetRoomCommandOutput,
} from "./commands/GetRoomCommand";
import {
  ListLoggingConfigurationsCommandInput,
  ListLoggingConfigurationsCommandOutput,
} from "./commands/ListLoggingConfigurationsCommand";
import {
  ListRoomsCommandInput,
  ListRoomsCommandOutput,
} from "./commands/ListRoomsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  SendEventCommandInput,
  SendEventCommandOutput,
} from "./commands/SendEventCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateLoggingConfigurationCommandInput,
  UpdateLoggingConfigurationCommandOutput,
} from "./commands/UpdateLoggingConfigurationCommand";
import {
  UpdateRoomCommandInput,
  UpdateRoomCommandOutput,
} from "./commands/UpdateRoomCommand";
import { IvschatClient } from "./IvschatClient";
export interface Ivschat {
  createChatToken(
    args: CreateChatTokenCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateChatTokenCommandOutput>;
  createChatToken(
    args: CreateChatTokenCommandInput,
    cb: (err: any, data?: CreateChatTokenCommandOutput) => void
  ): void;
  createChatToken(
    args: CreateChatTokenCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateChatTokenCommandOutput) => void
  ): void;
  createLoggingConfiguration(
    args: CreateLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateLoggingConfigurationCommandOutput>;
  createLoggingConfiguration(
    args: CreateLoggingConfigurationCommandInput,
    cb: (err: any, data?: CreateLoggingConfigurationCommandOutput) => void
  ): void;
  createLoggingConfiguration(
    args: CreateLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateLoggingConfigurationCommandOutput) => void
  ): void;
  createRoom(): Promise<CreateRoomCommandOutput>;
  createRoom(
    args: CreateRoomCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRoomCommandOutput>;
  createRoom(
    args: CreateRoomCommandInput,
    cb: (err: any, data?: CreateRoomCommandOutput) => void
  ): void;
  createRoom(
    args: CreateRoomCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRoomCommandOutput) => void
  ): void;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLoggingConfigurationCommandOutput>;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void
  ): void;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void
  ): void;
  deleteMessage(
    args: DeleteMessageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteMessageCommandOutput>;
  deleteMessage(
    args: DeleteMessageCommandInput,
    cb: (err: any, data?: DeleteMessageCommandOutput) => void
  ): void;
  deleteMessage(
    args: DeleteMessageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteMessageCommandOutput) => void
  ): void;
  deleteRoom(
    args: DeleteRoomCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRoomCommandOutput>;
  deleteRoom(
    args: DeleteRoomCommandInput,
    cb: (err: any, data?: DeleteRoomCommandOutput) => void
  ): void;
  deleteRoom(
    args: DeleteRoomCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRoomCommandOutput) => void
  ): void;
  disconnectUser(
    args: DisconnectUserCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisconnectUserCommandOutput>;
  disconnectUser(
    args: DisconnectUserCommandInput,
    cb: (err: any, data?: DisconnectUserCommandOutput) => void
  ): void;
  disconnectUser(
    args: DisconnectUserCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisconnectUserCommandOutput) => void
  ): void;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoggingConfigurationCommandOutput>;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void
  ): void;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void
  ): void;
  getRoom(
    args: GetRoomCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRoomCommandOutput>;
  getRoom(
    args: GetRoomCommandInput,
    cb: (err: any, data?: GetRoomCommandOutput) => void
  ): void;
  getRoom(
    args: GetRoomCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRoomCommandOutput) => void
  ): void;
  listLoggingConfigurations(): Promise<ListLoggingConfigurationsCommandOutput>;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListLoggingConfigurationsCommandOutput>;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void
  ): void;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void
  ): void;
  listRooms(): Promise<ListRoomsCommandOutput>;
  listRooms(
    args: ListRoomsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRoomsCommandOutput>;
  listRooms(
    args: ListRoomsCommandInput,
    cb: (err: any, data?: ListRoomsCommandOutput) => void
  ): void;
  listRooms(
    args: ListRoomsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRoomsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  sendEvent(
    args: SendEventCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendEventCommandOutput>;
  sendEvent(
    args: SendEventCommandInput,
    cb: (err: any, data?: SendEventCommandOutput) => void
  ): void;
  sendEvent(
    args: SendEventCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendEventCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateLoggingConfiguration(
    args: UpdateLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateLoggingConfigurationCommandOutput>;
  updateLoggingConfiguration(
    args: UpdateLoggingConfigurationCommandInput,
    cb: (err: any, data?: UpdateLoggingConfigurationCommandOutput) => void
  ): void;
  updateLoggingConfiguration(
    args: UpdateLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateLoggingConfigurationCommandOutput) => void
  ): void;
  updateRoom(
    args: UpdateRoomCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRoomCommandOutput>;
  updateRoom(
    args: UpdateRoomCommandInput,
    cb: (err: any, data?: UpdateRoomCommandOutput) => void
  ): void;
  updateRoom(
    args: UpdateRoomCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRoomCommandOutput) => void
  ): void;
}
export declare class Ivschat extends IvschatClient implements Ivschat {}
