import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { IvschatClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IvschatClient";
import { SendEventRequest, SendEventResponse } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link SendEventCommand}.
 */
export interface SendEventCommandInput extends SendEventRequest {
}
/**
 * @public
 *
 * The output of {@link SendEventCommand}.
 */
export interface SendEventCommandOutput extends SendEventResponse, __MetadataBearer {
}
declare const SendEventCommand_base: {
    new (input: SendEventCommandInput): import("@smithy/smithy-client").CommandImpl<SendEventCommandInput, SendEventCommandOutput, IvschatClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (input: SendEventCommandInput): import("@smithy/smithy-client").CommandImpl<SendEventCommandInput, SendEventCommandOutput, IvschatClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Sends an event to a room. Use this within your applicationâ€™s business logic to send
 *          events to clients of a room; e.g., to notify clients to change the way the chat UI is
 *          rendered.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { IvschatClient, SendEventCommand } from "@aws-sdk/client-ivschat"; // ES Modules import
 * // const { IvschatClient, SendEventCommand } = require("@aws-sdk/client-ivschat"); // CommonJS import
 * const client = new IvschatClient(config);
 * const input = { // SendEventRequest
 *   roomIdentifier: "STRING_VALUE", // required
 *   eventName: "STRING_VALUE", // required
 *   attributes: { // EventAttributes
 *     "<keys>": "STRING_VALUE",
 *   },
 * };
 * const command = new SendEventCommand(input);
 * const response = await client.send(command);
 * // { // SendEventResponse
 * //   id: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param SendEventCommandInput - {@link SendEventCommandInput}
 * @returns {@link SendEventCommandOutput}
 * @see {@link SendEventCommandInput} for command's `input` shape.
 * @see {@link SendEventCommandOutput} for command's `response` shape.
 * @see {@link IvschatClientResolvedConfig | config} for IvschatClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p/>
 *
 * @throws {@link PendingVerification} (client fault)
 *  <p/>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p/>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p/>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p/>
 *
 * @throws {@link IvschatServiceException}
 * <p>Base exception class for all service exceptions from Ivschat service.</p>
 *
 *
 * @public
 */
export declare class SendEventCommand extends SendEventCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: SendEventRequest;
            output: SendEventResponse;
        };
        sdk: {
            input: SendEventCommandInput;
            output: SendEventCommandOutput;
        };
    };
}
