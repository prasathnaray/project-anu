"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  AccessDeniedException: () => AccessDeniedException,
  CompositionState: () => CompositionState,
  ConflictException: () => ConflictException,
  CreateEncoderConfigurationCommand: () => CreateEncoderConfigurationCommand,
  CreateIngestConfigurationCommand: () => CreateIngestConfigurationCommand,
  CreateIngestConfigurationResponseFilterSensitiveLog: () => CreateIngestConfigurationResponseFilterSensitiveLog,
  CreateParticipantTokenCommand: () => CreateParticipantTokenCommand,
  CreateParticipantTokenResponseFilterSensitiveLog: () => CreateParticipantTokenResponseFilterSensitiveLog,
  CreateStageCommand: () => CreateStageCommand,
  CreateStageResponseFilterSensitiveLog: () => CreateStageResponseFilterSensitiveLog,
  CreateStorageConfigurationCommand: () => CreateStorageConfigurationCommand,
  DeleteEncoderConfigurationCommand: () => DeleteEncoderConfigurationCommand,
  DeleteIngestConfigurationCommand: () => DeleteIngestConfigurationCommand,
  DeletePublicKeyCommand: () => DeletePublicKeyCommand,
  DeleteStageCommand: () => DeleteStageCommand,
  DeleteStorageConfigurationCommand: () => DeleteStorageConfigurationCommand,
  DestinationState: () => DestinationState,
  DisconnectParticipantCommand: () => DisconnectParticipantCommand,
  EventErrorCode: () => EventErrorCode,
  EventName: () => EventName,
  GetCompositionCommand: () => GetCompositionCommand,
  GetEncoderConfigurationCommand: () => GetEncoderConfigurationCommand,
  GetIngestConfigurationCommand: () => GetIngestConfigurationCommand,
  GetIngestConfigurationResponseFilterSensitiveLog: () => GetIngestConfigurationResponseFilterSensitiveLog,
  GetParticipantCommand: () => GetParticipantCommand,
  GetPublicKeyCommand: () => GetPublicKeyCommand,
  GetStageCommand: () => GetStageCommand,
  GetStageSessionCommand: () => GetStageSessionCommand,
  GetStorageConfigurationCommand: () => GetStorageConfigurationCommand,
  IVSRealTime: () => IVSRealTime,
  IVSRealTimeClient: () => IVSRealTimeClient,
  IVSRealTimeServiceException: () => IVSRealTimeServiceException,
  ImportPublicKeyCommand: () => ImportPublicKeyCommand,
  IngestConfigurationFilterSensitiveLog: () => IngestConfigurationFilterSensitiveLog,
  IngestConfigurationState: () => IngestConfigurationState,
  IngestProtocol: () => IngestProtocol,
  InternalServerException: () => InternalServerException,
  ListCompositionsCommand: () => ListCompositionsCommand,
  ListEncoderConfigurationsCommand: () => ListEncoderConfigurationsCommand,
  ListIngestConfigurationsCommand: () => ListIngestConfigurationsCommand,
  ListParticipantEventsCommand: () => ListParticipantEventsCommand,
  ListParticipantReplicasCommand: () => ListParticipantReplicasCommand,
  ListParticipantsCommand: () => ListParticipantsCommand,
  ListPublicKeysCommand: () => ListPublicKeysCommand,
  ListStageSessionsCommand: () => ListStageSessionsCommand,
  ListStagesCommand: () => ListStagesCommand,
  ListStorageConfigurationsCommand: () => ListStorageConfigurationsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ParticipantProtocol: () => ParticipantProtocol,
  ParticipantRecordingFilterByRecordingState: () => ParticipantRecordingFilterByRecordingState,
  ParticipantRecordingMediaType: () => ParticipantRecordingMediaType,
  ParticipantRecordingState: () => ParticipantRecordingState,
  ParticipantState: () => ParticipantState,
  ParticipantTokenCapability: () => ParticipantTokenCapability,
  ParticipantTokenFilterSensitiveLog: () => ParticipantTokenFilterSensitiveLog,
  PendingVerification: () => PendingVerification,
  PipBehavior: () => PipBehavior,
  PipPosition: () => PipPosition,
  RecordingConfigurationFormat: () => RecordingConfigurationFormat,
  ReplicationState: () => ReplicationState,
  ReplicationType: () => ReplicationType,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  StartCompositionCommand: () => StartCompositionCommand,
  StartParticipantReplicationCommand: () => StartParticipantReplicationCommand,
  StopCompositionCommand: () => StopCompositionCommand,
  StopParticipantReplicationCommand: () => StopParticipantReplicationCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThumbnailRecordingMode: () => ThumbnailRecordingMode,
  ThumbnailStorageType: () => ThumbnailStorageType,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateIngestConfigurationCommand: () => UpdateIngestConfigurationCommand,
  UpdateIngestConfigurationResponseFilterSensitiveLog: () => UpdateIngestConfigurationResponseFilterSensitiveLog,
  UpdateStageCommand: () => UpdateStageCommand,
  ValidationException: () => ValidationException,
  VideoAspectRatio: () => VideoAspectRatio,
  VideoFillMode: () => VideoFillMode,
  __Client: () => import_smithy_client.Client,
  paginateListCompositions: () => paginateListCompositions,
  paginateListEncoderConfigurations: () => paginateListEncoderConfigurations,
  paginateListIngestConfigurations: () => paginateListIngestConfigurations,
  paginateListParticipantEvents: () => paginateListParticipantEvents,
  paginateListParticipantReplicas: () => paginateListParticipantReplicas,
  paginateListParticipants: () => paginateListParticipants,
  paginateListPublicKeys: () => paginateListPublicKeys,
  paginateListStageSessions: () => paginateListStageSessions,
  paginateListStages: () => paginateListStages,
  paginateListStorageConfigurations: () => paginateListStorageConfigurations
});
module.exports = __toCommonJS(index_exports);

// src/IVSRealTimeClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "ivs"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/IVSRealTimeClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/IVSRealTimeClient.ts
var IVSRealTimeClient = class extends import_smithy_client.Client {
  static {
    __name(this, "IVSRealTimeClient");
  }
  /**
   * The resolved configuration of IVSRealTimeClient class. This is resolved and normalized from the {@link IVSRealTimeClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultIVSRealTimeHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/IVSRealTime.ts


// src/commands/CreateEncoderConfigurationCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/IVSRealTimeServiceException.ts

var IVSRealTimeServiceException = class _IVSRealTimeServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "IVSRealTimeServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _IVSRealTimeServiceException.prototype);
  }
};

// src/models/models_0.ts

var AccessDeniedException = class _AccessDeniedException extends IVSRealTimeServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p>User does not have sufficient access to perform this action.</p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var ConflictException = class _ConflictException extends IVSRealTimeServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p>Updating or deleting a resource can cause an inconsistent state.</p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var InternalServerException = class _InternalServerException extends IVSRealTimeServiceException {
  static {
    __name(this, "InternalServerException");
  }
  name = "InternalServerException";
  $fault = "server";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p>Unexpected error during processing of request.</p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var PendingVerification = class _PendingVerification extends IVSRealTimeServiceException {
  static {
    __name(this, "PendingVerification");
  }
  name = "PendingVerification";
  $fault = "client";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p> Your account is pending verification. </p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PendingVerification",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _PendingVerification.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends IVSRealTimeServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p>Request references a resource which does not exist.</p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var ServiceQuotaExceededException = class _ServiceQuotaExceededException extends IVSRealTimeServiceException {
  static {
    __name(this, "ServiceQuotaExceededException");
  }
  name = "ServiceQuotaExceededException";
  $fault = "client";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p>Request would cause a service quota to be exceeded.</p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var ValidationException = class _ValidationException extends IVSRealTimeServiceException {
  static {
    __name(this, "ValidationException");
  }
  name = "ValidationException";
  $fault = "client";
  /**
   * <p/>
   * @public
   */
  accessControlAllowOrigin;
  /**
   * <p/>
   * @public
   */
  accessControlExposeHeaders;
  /**
   * <p/>
   * @public
   */
  cacheControl;
  /**
   * <p/>
   * @public
   */
  contentSecurityPolicy;
  /**
   * <p/>
   * @public
   */
  strictTransportSecurity;
  /**
   * <p/>
   * @public
   */
  xContentTypeOptions;
  /**
   * <p/>
   * @public
   */
  xFrameOptions;
  /**
   * <p/>
   * @public
   */
  xAmznErrorType;
  /**
   * <p>The input fails to satisfy the constraints specified by an Amazon Web Services service.</p>
   * @public
   */
  exceptionMessage;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.accessControlAllowOrigin = opts.accessControlAllowOrigin;
    this.accessControlExposeHeaders = opts.accessControlExposeHeaders;
    this.cacheControl = opts.cacheControl;
    this.contentSecurityPolicy = opts.contentSecurityPolicy;
    this.strictTransportSecurity = opts.strictTransportSecurity;
    this.xContentTypeOptions = opts.xContentTypeOptions;
    this.xFrameOptions = opts.xFrameOptions;
    this.xAmznErrorType = opts.xAmznErrorType;
    this.exceptionMessage = opts.exceptionMessage;
  }
};
var IngestProtocol = {
  RTMP: "RTMP",
  RTMPS: "RTMPS"
};
var IngestConfigurationState = {
  ACTIVE: "ACTIVE",
  INACTIVE: "INACTIVE"
};
var ParticipantTokenCapability = {
  PUBLISH: "PUBLISH",
  SUBSCRIBE: "SUBSCRIBE"
};
var ParticipantRecordingMediaType = {
  AUDIO_ONLY: "AUDIO_ONLY",
  AUDIO_VIDEO: "AUDIO_VIDEO",
  NONE: "NONE"
};
var ThumbnailRecordingMode = {
  DISABLED: "DISABLED",
  INTERVAL: "INTERVAL"
};
var ThumbnailStorageType = {
  LATEST: "LATEST",
  SEQUENTIAL: "SEQUENTIAL"
};
var RecordingConfigurationFormat = {
  HLS: "HLS"
};
var DestinationState = {
  ACTIVE: "ACTIVE",
  FAILED: "FAILED",
  RECONNECTING: "RECONNECTING",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var VideoAspectRatio = {
  AUTO: "AUTO",
  PORTRAIT: "PORTRAIT",
  SQUARE: "SQUARE",
  VIDEO: "VIDEO"
};
var VideoFillMode = {
  CONTAIN: "CONTAIN",
  COVER: "COVER",
  FILL: "FILL"
};
var PipBehavior = {
  DYNAMIC: "DYNAMIC",
  STATIC: "STATIC"
};
var PipPosition = {
  BOTTOM_LEFT: "BOTTOM_LEFT",
  BOTTOM_RIGHT: "BOTTOM_RIGHT",
  TOP_LEFT: "TOP_LEFT",
  TOP_RIGHT: "TOP_RIGHT"
};
var CompositionState = {
  ACTIVE: "ACTIVE",
  FAILED: "FAILED",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var ParticipantProtocol = {
  RTMP: "RTMP",
  RTMPS: "RTMPS",
  UNKNOWN: "UNKNOWN",
  WHIP: "WHIP"
};
var ParticipantRecordingState = {
  ACTIVE: "ACTIVE",
  DISABLED: "DISABLED",
  FAILED: "FAILED",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var ReplicationState = {
  ACTIVE: "ACTIVE",
  STOPPED: "STOPPED"
};
var ReplicationType = {
  NONE: "NONE",
  REPLICA: "REPLICA",
  SOURCE: "SOURCE"
};
var ParticipantState = {
  CONNECTED: "CONNECTED",
  DISCONNECTED: "DISCONNECTED"
};
var EventErrorCode = {
  BITRATE_EXCEEDED: "BITRATE_EXCEEDED",
  B_FRAME_PRESENT: "B_FRAME_PRESENT",
  INSUFFICIENT_CAPABILITIES: "INSUFFICIENT_CAPABILITIES",
  INTERNAL_SERVER_EXCEPTION: "INTERNAL_SERVER_EXCEPTION",
  INVALID_AUDIO_CODEC: "INVALID_AUDIO_CODEC",
  INVALID_INPUT: "INVALID_INPUT",
  INVALID_PROTOCOL: "INVALID_PROTOCOL",
  INVALID_STREAM_KEY: "INVALID_STREAM_KEY",
  INVALID_VIDEO_CODEC: "INVALID_VIDEO_CODEC",
  PUBLISHER_NOT_FOUND: "PUBLISHER_NOT_FOUND",
  QUOTA_EXCEEDED: "QUOTA_EXCEEDED",
  RESOLUTION_EXCEEDED: "RESOLUTION_EXCEEDED",
  REUSE_OF_STREAM_KEY: "REUSE_OF_STREAM_KEY",
  STREAM_DURATION_EXCEEDED: "STREAM_DURATION_EXCEEDED"
};
var EventName = {
  JOINED: "JOINED",
  JOIN_ERROR: "JOIN_ERROR",
  LEFT: "LEFT",
  PUBLISH_ERROR: "PUBLISH_ERROR",
  PUBLISH_STARTED: "PUBLISH_STARTED",
  PUBLISH_STOPPED: "PUBLISH_STOPPED",
  REPLICATION_STARTED: "REPLICATION_STARTED",
  REPLICATION_STOPPED: "REPLICATION_STOPPED",
  SUBSCRIBE_ERROR: "SUBSCRIBE_ERROR",
  SUBSCRIBE_STARTED: "SUBSCRIBE_STARTED",
  SUBSCRIBE_STOPPED: "SUBSCRIBE_STOPPED"
};
var ParticipantRecordingFilterByRecordingState = {
  ACTIVE: "ACTIVE",
  FAILED: "FAILED",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var IngestConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.streamKey && { streamKey: import_smithy_client.SENSITIVE_STRING }
}), "IngestConfigurationFilterSensitiveLog");
var CreateIngestConfigurationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ingestConfiguration && {
    ingestConfiguration: IngestConfigurationFilterSensitiveLog(obj.ingestConfiguration)
  }
}), "CreateIngestConfigurationResponseFilterSensitiveLog");
var ParticipantTokenFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.token && { token: import_smithy_client.SENSITIVE_STRING }
}), "ParticipantTokenFilterSensitiveLog");
var CreateParticipantTokenResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.participantToken && { participantToken: ParticipantTokenFilterSensitiveLog(obj.participantToken) }
}), "CreateParticipantTokenResponseFilterSensitiveLog");
var CreateStageResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.participantTokens && {
    participantTokens: obj.participantTokens.map((item) => ParticipantTokenFilterSensitiveLog(item))
  }
}), "CreateStageResponseFilterSensitiveLog");
var GetIngestConfigurationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ingestConfiguration && {
    ingestConfiguration: IngestConfigurationFilterSensitiveLog(obj.ingestConfiguration)
  }
}), "GetIngestConfigurationResponseFilterSensitiveLog");
var UpdateIngestConfigurationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ingestConfiguration && {
    ingestConfiguration: IngestConfigurationFilterSensitiveLog(obj.ingestConfiguration)
  }
}), "UpdateIngestConfigurationResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CreateEncoderConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateEncoderConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      video: /* @__PURE__ */ __name((_) => se_Video(_, context), "video")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateEncoderConfigurationCommand");
var se_CreateIngestConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateIngestConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attributes: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "attributes"),
      ingestProtocol: [],
      insecureIngest: [],
      name: [],
      stageArn: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      userId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateIngestConfigurationCommand");
var se_CreateParticipantTokenCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateParticipantToken");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attributes: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "attributes"),
      capabilities: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "capabilities"),
      duration: [],
      stageArn: [],
      userId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateParticipantTokenCommand");
var se_CreateStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateStage");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      autoParticipantRecordingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "autoParticipantRecordingConfiguration"),
      name: [],
      participantTokenConfigurations: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "participantTokenConfigurations"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateStageCommand");
var se_CreateStorageConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateStorageConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      s3: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "s3"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateStorageConfigurationCommand");
var se_DeleteEncoderConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteEncoderConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteEncoderConfigurationCommand");
var se_DeleteIngestConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteIngestConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: [],
      force: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteIngestConfigurationCommand");
var se_DeletePublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeletePublicKey");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeletePublicKeyCommand");
var se_DeleteStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteStage");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteStageCommand");
var se_DeleteStorageConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteStorageConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteStorageConfigurationCommand");
var se_DisconnectParticipantCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DisconnectParticipant");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      participantId: [],
      reason: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DisconnectParticipantCommand");
var se_GetCompositionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetComposition");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetCompositionCommand");
var se_GetEncoderConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetEncoderConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetEncoderConfigurationCommand");
var se_GetIngestConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetIngestConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetIngestConfigurationCommand");
var se_GetParticipantCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetParticipant");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      participantId: [],
      sessionId: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetParticipantCommand");
var se_GetPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetPublicKey");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetPublicKeyCommand");
var se_GetStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetStage");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetStageCommand");
var se_GetStageSessionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetStageSession");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      sessionId: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetStageSessionCommand");
var se_GetStorageConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetStorageConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetStorageConfigurationCommand");
var se_ImportPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ImportPublicKey");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      publicKeyMaterial: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ImportPublicKeyCommand");
var se_ListCompositionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListCompositions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filterByEncoderConfigurationArn: [],
      filterByStageArn: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListCompositionsCommand");
var se_ListEncoderConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListEncoderConfigurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListEncoderConfigurationsCommand");
var se_ListIngestConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListIngestConfigurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filterByStageArn: [],
      filterByState: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListIngestConfigurationsCommand");
var se_ListParticipantEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListParticipantEvents");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: [],
      participantId: [],
      sessionId: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListParticipantEventsCommand");
var se_ListParticipantReplicasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListParticipantReplicas");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: [],
      participantId: [],
      sourceStageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListParticipantReplicasCommand");
var se_ListParticipantsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListParticipants");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filterByPublished: [],
      filterByRecordingState: [],
      filterByState: [],
      filterByUserId: [],
      maxResults: [],
      nextToken: [],
      sessionId: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListParticipantsCommand");
var se_ListPublicKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListPublicKeys");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListPublicKeysCommand");
var se_ListStagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListStages");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListStagesCommand");
var se_ListStageSessionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListStageSessions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListStageSessionsCommand");
var se_ListStorageConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListStorageConfigurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListStorageConfigurationsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_StartCompositionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartComposition");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      destinations: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "destinations"),
      idempotencyToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      layout: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "layout"),
      stageArn: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartCompositionCommand");
var se_StartParticipantReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartParticipantReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attributes: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "attributes"),
      destinationStageArn: [],
      participantId: [],
      reconnectWindowSeconds: [],
      sourceStageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartParticipantReplicationCommand");
var se_StopCompositionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StopComposition");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopCompositionCommand");
var se_StopParticipantReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StopParticipantReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      destinationStageArn: [],
      participantId: [],
      sourceStageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopParticipantReplicationCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [(0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null, () => input[_tK] || []]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateIngestConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateIngestConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: [],
      stageArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateIngestConfigurationCommand");
var se_UpdateStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateStage");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: [],
      autoParticipantRecordingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "autoParticipantRecordingConfiguration"),
      name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateStageCommand");
var de_CreateEncoderConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    encoderConfiguration: /* @__PURE__ */ __name((_) => de_EncoderConfiguration(_, context), "encoderConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateEncoderConfigurationCommand");
var de_CreateIngestConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateIngestConfigurationCommand");
var de_CreateParticipantTokenCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    participantToken: /* @__PURE__ */ __name((_) => de_ParticipantToken(_, context), "participantToken")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateParticipantTokenCommand");
var de_CreateStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    participantTokens: /* @__PURE__ */ __name((_) => de_ParticipantTokenList(_, context), "participantTokens"),
    stage: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateStageCommand");
var de_CreateStorageConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    storageConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateStorageConfigurationCommand");
var de_DeleteEncoderConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteEncoderConfigurationCommand");
var de_DeleteIngestConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteIngestConfigurationCommand");
var de_DeletePublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeletePublicKeyCommand");
var de_DeleteStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteStageCommand");
var de_DeleteStorageConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteStorageConfigurationCommand");
var de_DisconnectParticipantCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisconnectParticipantCommand");
var de_GetCompositionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    composition: /* @__PURE__ */ __name((_) => de_Composition(_, context), "composition")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCompositionCommand");
var de_GetEncoderConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    encoderConfiguration: /* @__PURE__ */ __name((_) => de_EncoderConfiguration(_, context), "encoderConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetEncoderConfigurationCommand");
var de_GetIngestConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIngestConfigurationCommand");
var de_GetParticipantCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    participant: /* @__PURE__ */ __name((_) => de_Participant(_, context), "participant")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetParticipantCommand");
var de_GetPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    publicKey: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPublicKeyCommand");
var de_GetStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    stage: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStageCommand");
var de_GetStageSessionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    stageSession: /* @__PURE__ */ __name((_) => de_StageSession(_, context), "stageSession")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStageSessionCommand");
var de_GetStorageConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    storageConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStorageConfigurationCommand");
var de_ImportPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    publicKey: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ImportPublicKeyCommand");
var de_ListCompositionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    compositions: /* @__PURE__ */ __name((_) => de_CompositionSummaryList(_, context), "compositions"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListCompositionsCommand");
var de_ListEncoderConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    encoderConfigurations: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListEncoderConfigurationsCommand");
var de_ListIngestConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestConfigurations: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListIngestConfigurationsCommand");
var de_ListParticipantEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    events: /* @__PURE__ */ __name((_) => de_EventList(_, context), "events"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListParticipantEventsCommand");
var de_ListParticipantReplicasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    replicas: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListParticipantReplicasCommand");
var de_ListParticipantsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    participants: /* @__PURE__ */ __name((_) => de_ParticipantList(_, context), "participants")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListParticipantsCommand");
var de_ListPublicKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    publicKeys: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPublicKeysCommand");
var de_ListStagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    stages: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListStagesCommand");
var de_ListStageSessionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    stageSessions: /* @__PURE__ */ __name((_) => de_StageSessionList(_, context), "stageSessions")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListStageSessionsCommand");
var de_ListStorageConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    storageConfigurations: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListStorageConfigurationsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_StartCompositionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    composition: /* @__PURE__ */ __name((_) => de_Composition(_, context), "composition")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartCompositionCommand");
var de_StartParticipantReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output),
    [_aCAO]: [, output.headers[_acao]],
    [_aCEH]: [, output.headers[_aceh]],
    [_cC]: [, output.headers[_cc]],
    [_cSP]: [, output.headers[_csp]],
    [_sTS]: [, output.headers[_sts]],
    [_xCTO]: [, output.headers[_xcto]],
    [_xFO]: [, output.headers[_xfo]]
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StartParticipantReplicationCommand");
var de_StopCompositionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopCompositionCommand");
var de_StopParticipantReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output),
    [_aCAO]: [, output.headers[_acao]],
    [_aCEH]: [, output.headers[_aceh]],
    [_cC]: [, output.headers[_cc]],
    [_cSP]: [, output.headers[_csp]],
    [_sTS]: [, output.headers[_sts]],
    [_xCTO]: [, output.headers[_xcto]],
    [_xFO]: [, output.headers[_xfo]]
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopParticipantReplicationCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateIngestConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ingestConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateIngestConfigurationCommand");
var de_UpdateStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    stage: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateStageCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.ivsrealtime#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.ivsrealtime#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.ivsrealtime#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "PendingVerification":
    case "com.amazonaws.ivsrealtime#PendingVerification":
      throw await de_PendingVerificationRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.ivsrealtime#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.ivsrealtime#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.ivsrealtime#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(IVSRealTimeServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_PendingVerificationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new PendingVerification({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_PendingVerificationRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_aCAO]: [, parsedOutput.headers[_acao]],
    [_aCEH]: [, parsedOutput.headers[_aceh]],
    [_cC]: [, parsedOutput.headers[_cc]],
    [_cSP]: [, parsedOutput.headers[_csp]],
    [_sTS]: [, parsedOutput.headers[_sts]],
    [_xCTO]: [, parsedOutput.headers[_xcto]],
    [_xFO]: [, parsedOutput.headers[_xfo]],
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    exceptionMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_Video = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    bitrate: [],
    framerate: import_smithy_client.serializeFloat,
    height: [],
    width: []
  });
}, "se_Video");
var de_Composition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    destinations: /* @__PURE__ */ __name((_) => de_DestinationList(_, context), "destinations"),
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endTime"),
    layout: import_smithy_client._json,
    stageArn: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startTime"),
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_Composition");
var de_CompositionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    destinations: /* @__PURE__ */ __name((_) => de_DestinationSummaryList(_, context), "destinations"),
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endTime"),
    stageArn: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startTime"),
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_CompositionSummary");
var de_CompositionSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CompositionSummary(entry, context);
  });
  return retVal;
}, "de_CompositionSummaryList");
var de_Destination = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    configuration: import_smithy_client._json,
    detail: import_smithy_client._json,
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endTime"),
    id: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startTime"),
    state: import_smithy_client.expectString
  });
}, "de_Destination");
var de_DestinationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Destination(entry, context);
  });
  return retVal;
}, "de_DestinationList");
var de_DestinationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endTime"),
    id: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startTime"),
    state: import_smithy_client.expectString
  });
}, "de_DestinationSummary");
var de_DestinationSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DestinationSummary(entry, context);
  });
  return retVal;
}, "de_DestinationSummaryList");
var de_EncoderConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    video: /* @__PURE__ */ __name((_) => de_Video(_, context), "video")
  });
}, "de_EncoderConfiguration");
var de_Event = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    destinationSessionId: import_smithy_client.expectString,
    destinationStageArn: import_smithy_client.expectString,
    errorCode: import_smithy_client.expectString,
    eventTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "eventTime"),
    name: import_smithy_client.expectString,
    participantId: import_smithy_client.expectString,
    remoteParticipantId: import_smithy_client.expectString,
    replica: import_smithy_client.expectBoolean
  });
}, "de_Event");
var de_EventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Event(entry, context);
  });
  return retVal;
}, "de_EventList");
var de_Participant = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    attributes: import_smithy_client._json,
    browserName: import_smithy_client.expectString,
    browserVersion: import_smithy_client.expectString,
    firstJoinTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "firstJoinTime"),
    ispName: import_smithy_client.expectString,
    osName: import_smithy_client.expectString,
    osVersion: import_smithy_client.expectString,
    participantId: import_smithy_client.expectString,
    protocol: import_smithy_client.expectString,
    published: import_smithy_client.expectBoolean,
    recordingS3BucketName: import_smithy_client.expectString,
    recordingS3Prefix: import_smithy_client.expectString,
    recordingState: import_smithy_client.expectString,
    replicationState: import_smithy_client.expectString,
    replicationType: import_smithy_client.expectString,
    sdkVersion: import_smithy_client.expectString,
    sourceSessionId: import_smithy_client.expectString,
    sourceStageArn: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    userId: import_smithy_client.expectString
  });
}, "de_Participant");
var de_ParticipantList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ParticipantSummary(entry, context);
  });
  return retVal;
}, "de_ParticipantList");
var de_ParticipantSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    firstJoinTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "firstJoinTime"),
    participantId: import_smithy_client.expectString,
    published: import_smithy_client.expectBoolean,
    recordingState: import_smithy_client.expectString,
    replicationState: import_smithy_client.expectString,
    replicationType: import_smithy_client.expectString,
    sourceSessionId: import_smithy_client.expectString,
    sourceStageArn: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    userId: import_smithy_client.expectString
  });
}, "de_ParticipantSummary");
var de_ParticipantToken = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    attributes: import_smithy_client._json,
    capabilities: import_smithy_client._json,
    duration: import_smithy_client.expectInt32,
    expirationTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "expirationTime"),
    participantId: import_smithy_client.expectString,
    token: import_smithy_client.expectString,
    userId: import_smithy_client.expectString
  });
}, "de_ParticipantToken");
var de_ParticipantTokenList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ParticipantToken(entry, context);
  });
  return retVal;
}, "de_ParticipantTokenList");
var de_StageSession = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endTime"),
    sessionId: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startTime")
  });
}, "de_StageSession");
var de_StageSessionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_StageSessionSummary(entry, context);
  });
  return retVal;
}, "de_StageSessionList");
var de_StageSessionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "endTime"),
    sessionId: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "startTime")
  });
}, "de_StageSessionSummary");
var de_Video = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bitrate: import_smithy_client.expectInt32,
    framerate: import_smithy_client.limitedParseFloat32,
    height: import_smithy_client.expectInt32,
    width: import_smithy_client.expectInt32
  });
}, "de_Video");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _aCAO = "accessControlAllowOrigin";
var _aCEH = "accessControlExposeHeaders";
var _acao = "access-control-allow-origin";
var _aceh = "access-control-expose-headers";
var _cC = "cacheControl";
var _cSP = "contentSecurityPolicy";
var _cc = "cache-control";
var _csp = "content-security-policy";
var _sTS = "strictTransportSecurity";
var _sts = "strict-transport-security";
var _tK = "tagKeys";
var _xAET = "xAmznErrorType";
var _xCTO = "xContentTypeOptions";
var _xFO = "xFrameOptions";
var _xae = "x-amzn-errortype";
var _xcto = "x-content-type-options";
var _xfo = "x-frame-options";

// src/commands/CreateEncoderConfigurationCommand.ts
var CreateEncoderConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "CreateEncoderConfiguration", {}).n("IVSRealTimeClient", "CreateEncoderConfigurationCommand").f(void 0, void 0).ser(se_CreateEncoderConfigurationCommand).de(de_CreateEncoderConfigurationCommand).build() {
  static {
    __name(this, "CreateEncoderConfigurationCommand");
  }
};

// src/commands/CreateIngestConfigurationCommand.ts



var CreateIngestConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "CreateIngestConfiguration", {}).n("IVSRealTimeClient", "CreateIngestConfigurationCommand").f(void 0, CreateIngestConfigurationResponseFilterSensitiveLog).ser(se_CreateIngestConfigurationCommand).de(de_CreateIngestConfigurationCommand).build() {
  static {
    __name(this, "CreateIngestConfigurationCommand");
  }
};

// src/commands/CreateParticipantTokenCommand.ts



var CreateParticipantTokenCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "CreateParticipantToken", {}).n("IVSRealTimeClient", "CreateParticipantTokenCommand").f(void 0, CreateParticipantTokenResponseFilterSensitiveLog).ser(se_CreateParticipantTokenCommand).de(de_CreateParticipantTokenCommand).build() {
  static {
    __name(this, "CreateParticipantTokenCommand");
  }
};

// src/commands/CreateStageCommand.ts



var CreateStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "CreateStage", {}).n("IVSRealTimeClient", "CreateStageCommand").f(void 0, CreateStageResponseFilterSensitiveLog).ser(se_CreateStageCommand).de(de_CreateStageCommand).build() {
  static {
    __name(this, "CreateStageCommand");
  }
};

// src/commands/CreateStorageConfigurationCommand.ts



var CreateStorageConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "CreateStorageConfiguration", {}).n("IVSRealTimeClient", "CreateStorageConfigurationCommand").f(void 0, void 0).ser(se_CreateStorageConfigurationCommand).de(de_CreateStorageConfigurationCommand).build() {
  static {
    __name(this, "CreateStorageConfigurationCommand");
  }
};

// src/commands/DeleteEncoderConfigurationCommand.ts



var DeleteEncoderConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "DeleteEncoderConfiguration", {}).n("IVSRealTimeClient", "DeleteEncoderConfigurationCommand").f(void 0, void 0).ser(se_DeleteEncoderConfigurationCommand).de(de_DeleteEncoderConfigurationCommand).build() {
  static {
    __name(this, "DeleteEncoderConfigurationCommand");
  }
};

// src/commands/DeleteIngestConfigurationCommand.ts



var DeleteIngestConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "DeleteIngestConfiguration", {}).n("IVSRealTimeClient", "DeleteIngestConfigurationCommand").f(void 0, void 0).ser(se_DeleteIngestConfigurationCommand).de(de_DeleteIngestConfigurationCommand).build() {
  static {
    __name(this, "DeleteIngestConfigurationCommand");
  }
};

// src/commands/DeletePublicKeyCommand.ts



var DeletePublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "DeletePublicKey", {}).n("IVSRealTimeClient", "DeletePublicKeyCommand").f(void 0, void 0).ser(se_DeletePublicKeyCommand).de(de_DeletePublicKeyCommand).build() {
  static {
    __name(this, "DeletePublicKeyCommand");
  }
};

// src/commands/DeleteStageCommand.ts



var DeleteStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "DeleteStage", {}).n("IVSRealTimeClient", "DeleteStageCommand").f(void 0, void 0).ser(se_DeleteStageCommand).de(de_DeleteStageCommand).build() {
  static {
    __name(this, "DeleteStageCommand");
  }
};

// src/commands/DeleteStorageConfigurationCommand.ts



var DeleteStorageConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "DeleteStorageConfiguration", {}).n("IVSRealTimeClient", "DeleteStorageConfigurationCommand").f(void 0, void 0).ser(se_DeleteStorageConfigurationCommand).de(de_DeleteStorageConfigurationCommand).build() {
  static {
    __name(this, "DeleteStorageConfigurationCommand");
  }
};

// src/commands/DisconnectParticipantCommand.ts



var DisconnectParticipantCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "DisconnectParticipant", {}).n("IVSRealTimeClient", "DisconnectParticipantCommand").f(void 0, void 0).ser(se_DisconnectParticipantCommand).de(de_DisconnectParticipantCommand).build() {
  static {
    __name(this, "DisconnectParticipantCommand");
  }
};

// src/commands/GetCompositionCommand.ts



var GetCompositionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetComposition", {}).n("IVSRealTimeClient", "GetCompositionCommand").f(void 0, void 0).ser(se_GetCompositionCommand).de(de_GetCompositionCommand).build() {
  static {
    __name(this, "GetCompositionCommand");
  }
};

// src/commands/GetEncoderConfigurationCommand.ts



var GetEncoderConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetEncoderConfiguration", {}).n("IVSRealTimeClient", "GetEncoderConfigurationCommand").f(void 0, void 0).ser(se_GetEncoderConfigurationCommand).de(de_GetEncoderConfigurationCommand).build() {
  static {
    __name(this, "GetEncoderConfigurationCommand");
  }
};

// src/commands/GetIngestConfigurationCommand.ts



var GetIngestConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetIngestConfiguration", {}).n("IVSRealTimeClient", "GetIngestConfigurationCommand").f(void 0, GetIngestConfigurationResponseFilterSensitiveLog).ser(se_GetIngestConfigurationCommand).de(de_GetIngestConfigurationCommand).build() {
  static {
    __name(this, "GetIngestConfigurationCommand");
  }
};

// src/commands/GetParticipantCommand.ts



var GetParticipantCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetParticipant", {}).n("IVSRealTimeClient", "GetParticipantCommand").f(void 0, void 0).ser(se_GetParticipantCommand).de(de_GetParticipantCommand).build() {
  static {
    __name(this, "GetParticipantCommand");
  }
};

// src/commands/GetPublicKeyCommand.ts



var GetPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetPublicKey", {}).n("IVSRealTimeClient", "GetPublicKeyCommand").f(void 0, void 0).ser(se_GetPublicKeyCommand).de(de_GetPublicKeyCommand).build() {
  static {
    __name(this, "GetPublicKeyCommand");
  }
};

// src/commands/GetStageCommand.ts



var GetStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetStage", {}).n("IVSRealTimeClient", "GetStageCommand").f(void 0, void 0).ser(se_GetStageCommand).de(de_GetStageCommand).build() {
  static {
    __name(this, "GetStageCommand");
  }
};

// src/commands/GetStageSessionCommand.ts



var GetStageSessionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetStageSession", {}).n("IVSRealTimeClient", "GetStageSessionCommand").f(void 0, void 0).ser(se_GetStageSessionCommand).de(de_GetStageSessionCommand).build() {
  static {
    __name(this, "GetStageSessionCommand");
  }
};

// src/commands/GetStorageConfigurationCommand.ts



var GetStorageConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "GetStorageConfiguration", {}).n("IVSRealTimeClient", "GetStorageConfigurationCommand").f(void 0, void 0).ser(se_GetStorageConfigurationCommand).de(de_GetStorageConfigurationCommand).build() {
  static {
    __name(this, "GetStorageConfigurationCommand");
  }
};

// src/commands/ImportPublicKeyCommand.ts



var ImportPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ImportPublicKey", {}).n("IVSRealTimeClient", "ImportPublicKeyCommand").f(void 0, void 0).ser(se_ImportPublicKeyCommand).de(de_ImportPublicKeyCommand).build() {
  static {
    __name(this, "ImportPublicKeyCommand");
  }
};

// src/commands/ListCompositionsCommand.ts



var ListCompositionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListCompositions", {}).n("IVSRealTimeClient", "ListCompositionsCommand").f(void 0, void 0).ser(se_ListCompositionsCommand).de(de_ListCompositionsCommand).build() {
  static {
    __name(this, "ListCompositionsCommand");
  }
};

// src/commands/ListEncoderConfigurationsCommand.ts



var ListEncoderConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListEncoderConfigurations", {}).n("IVSRealTimeClient", "ListEncoderConfigurationsCommand").f(void 0, void 0).ser(se_ListEncoderConfigurationsCommand).de(de_ListEncoderConfigurationsCommand).build() {
  static {
    __name(this, "ListEncoderConfigurationsCommand");
  }
};

// src/commands/ListIngestConfigurationsCommand.ts



var ListIngestConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListIngestConfigurations", {}).n("IVSRealTimeClient", "ListIngestConfigurationsCommand").f(void 0, void 0).ser(se_ListIngestConfigurationsCommand).de(de_ListIngestConfigurationsCommand).build() {
  static {
    __name(this, "ListIngestConfigurationsCommand");
  }
};

// src/commands/ListParticipantEventsCommand.ts



var ListParticipantEventsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListParticipantEvents", {}).n("IVSRealTimeClient", "ListParticipantEventsCommand").f(void 0, void 0).ser(se_ListParticipantEventsCommand).de(de_ListParticipantEventsCommand).build() {
  static {
    __name(this, "ListParticipantEventsCommand");
  }
};

// src/commands/ListParticipantReplicasCommand.ts



var ListParticipantReplicasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListParticipantReplicas", {}).n("IVSRealTimeClient", "ListParticipantReplicasCommand").f(void 0, void 0).ser(se_ListParticipantReplicasCommand).de(de_ListParticipantReplicasCommand).build() {
  static {
    __name(this, "ListParticipantReplicasCommand");
  }
};

// src/commands/ListParticipantsCommand.ts



var ListParticipantsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListParticipants", {}).n("IVSRealTimeClient", "ListParticipantsCommand").f(void 0, void 0).ser(se_ListParticipantsCommand).de(de_ListParticipantsCommand).build() {
  static {
    __name(this, "ListParticipantsCommand");
  }
};

// src/commands/ListPublicKeysCommand.ts



var ListPublicKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListPublicKeys", {}).n("IVSRealTimeClient", "ListPublicKeysCommand").f(void 0, void 0).ser(se_ListPublicKeysCommand).de(de_ListPublicKeysCommand).build() {
  static {
    __name(this, "ListPublicKeysCommand");
  }
};

// src/commands/ListStagesCommand.ts



var ListStagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListStages", {}).n("IVSRealTimeClient", "ListStagesCommand").f(void 0, void 0).ser(se_ListStagesCommand).de(de_ListStagesCommand).build() {
  static {
    __name(this, "ListStagesCommand");
  }
};

// src/commands/ListStageSessionsCommand.ts



var ListStageSessionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListStageSessions", {}).n("IVSRealTimeClient", "ListStageSessionsCommand").f(void 0, void 0).ser(se_ListStageSessionsCommand).de(de_ListStageSessionsCommand).build() {
  static {
    __name(this, "ListStageSessionsCommand");
  }
};

// src/commands/ListStorageConfigurationsCommand.ts



var ListStorageConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListStorageConfigurations", {}).n("IVSRealTimeClient", "ListStorageConfigurationsCommand").f(void 0, void 0).ser(se_ListStorageConfigurationsCommand).de(de_ListStorageConfigurationsCommand).build() {
  static {
    __name(this, "ListStorageConfigurationsCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "ListTagsForResource", {}).n("IVSRealTimeClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/StartCompositionCommand.ts



var StartCompositionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "StartComposition", {}).n("IVSRealTimeClient", "StartCompositionCommand").f(void 0, void 0).ser(se_StartCompositionCommand).de(de_StartCompositionCommand).build() {
  static {
    __name(this, "StartCompositionCommand");
  }
};

// src/commands/StartParticipantReplicationCommand.ts



var StartParticipantReplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "StartParticipantReplication", {}).n("IVSRealTimeClient", "StartParticipantReplicationCommand").f(void 0, void 0).ser(se_StartParticipantReplicationCommand).de(de_StartParticipantReplicationCommand).build() {
  static {
    __name(this, "StartParticipantReplicationCommand");
  }
};

// src/commands/StopCompositionCommand.ts



var StopCompositionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "StopComposition", {}).n("IVSRealTimeClient", "StopCompositionCommand").f(void 0, void 0).ser(se_StopCompositionCommand).de(de_StopCompositionCommand).build() {
  static {
    __name(this, "StopCompositionCommand");
  }
};

// src/commands/StopParticipantReplicationCommand.ts



var StopParticipantReplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "StopParticipantReplication", {}).n("IVSRealTimeClient", "StopParticipantReplicationCommand").f(void 0, void 0).ser(se_StopParticipantReplicationCommand).de(de_StopParticipantReplicationCommand).build() {
  static {
    __name(this, "StopParticipantReplicationCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "TagResource", {}).n("IVSRealTimeClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "UntagResource", {}).n("IVSRealTimeClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateIngestConfigurationCommand.ts



var UpdateIngestConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "UpdateIngestConfiguration", {}).n("IVSRealTimeClient", "UpdateIngestConfigurationCommand").f(void 0, UpdateIngestConfigurationResponseFilterSensitiveLog).ser(se_UpdateIngestConfigurationCommand).de(de_UpdateIngestConfigurationCommand).build() {
  static {
    __name(this, "UpdateIngestConfigurationCommand");
  }
};

// src/commands/UpdateStageCommand.ts



var UpdateStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceRealTime", "UpdateStage", {}).n("IVSRealTimeClient", "UpdateStageCommand").f(void 0, void 0).ser(se_UpdateStageCommand).de(de_UpdateStageCommand).build() {
  static {
    __name(this, "UpdateStageCommand");
  }
};

// src/IVSRealTime.ts
var commands = {
  CreateEncoderConfigurationCommand,
  CreateIngestConfigurationCommand,
  CreateParticipantTokenCommand,
  CreateStageCommand,
  CreateStorageConfigurationCommand,
  DeleteEncoderConfigurationCommand,
  DeleteIngestConfigurationCommand,
  DeletePublicKeyCommand,
  DeleteStageCommand,
  DeleteStorageConfigurationCommand,
  DisconnectParticipantCommand,
  GetCompositionCommand,
  GetEncoderConfigurationCommand,
  GetIngestConfigurationCommand,
  GetParticipantCommand,
  GetPublicKeyCommand,
  GetStageCommand,
  GetStageSessionCommand,
  GetStorageConfigurationCommand,
  ImportPublicKeyCommand,
  ListCompositionsCommand,
  ListEncoderConfigurationsCommand,
  ListIngestConfigurationsCommand,
  ListParticipantEventsCommand,
  ListParticipantReplicasCommand,
  ListParticipantsCommand,
  ListPublicKeysCommand,
  ListStagesCommand,
  ListStageSessionsCommand,
  ListStorageConfigurationsCommand,
  ListTagsForResourceCommand,
  StartCompositionCommand,
  StartParticipantReplicationCommand,
  StopCompositionCommand,
  StopParticipantReplicationCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateIngestConfigurationCommand,
  UpdateStageCommand
};
var IVSRealTime = class extends IVSRealTimeClient {
  static {
    __name(this, "IVSRealTime");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, IVSRealTime);

// src/pagination/ListCompositionsPaginator.ts

var paginateListCompositions = (0, import_core.createPaginator)(IVSRealTimeClient, ListCompositionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListEncoderConfigurationsPaginator.ts

var paginateListEncoderConfigurations = (0, import_core.createPaginator)(IVSRealTimeClient, ListEncoderConfigurationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListIngestConfigurationsPaginator.ts

var paginateListIngestConfigurations = (0, import_core.createPaginator)(IVSRealTimeClient, ListIngestConfigurationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListParticipantEventsPaginator.ts

var paginateListParticipantEvents = (0, import_core.createPaginator)(IVSRealTimeClient, ListParticipantEventsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListParticipantReplicasPaginator.ts

var paginateListParticipantReplicas = (0, import_core.createPaginator)(IVSRealTimeClient, ListParticipantReplicasCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListParticipantsPaginator.ts

var paginateListParticipants = (0, import_core.createPaginator)(IVSRealTimeClient, ListParticipantsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListPublicKeysPaginator.ts

var paginateListPublicKeys = (0, import_core.createPaginator)(IVSRealTimeClient, ListPublicKeysCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListStageSessionsPaginator.ts

var paginateListStageSessions = (0, import_core.createPaginator)(IVSRealTimeClient, ListStageSessionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListStagesPaginator.ts

var paginateListStages = (0, import_core.createPaginator)(IVSRealTimeClient, ListStagesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListStorageConfigurationsPaginator.ts

var paginateListStorageConfigurations = (0, import_core.createPaginator)(IVSRealTimeClient, ListStorageConfigurationsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  IVSRealTimeServiceException,
  __Client,
  IVSRealTimeClient,
  IVSRealTime,
  $Command,
  CreateEncoderConfigurationCommand,
  CreateIngestConfigurationCommand,
  CreateParticipantTokenCommand,
  CreateStageCommand,
  CreateStorageConfigurationCommand,
  DeleteEncoderConfigurationCommand,
  DeleteIngestConfigurationCommand,
  DeletePublicKeyCommand,
  DeleteStageCommand,
  DeleteStorageConfigurationCommand,
  DisconnectParticipantCommand,
  GetCompositionCommand,
  GetEncoderConfigurationCommand,
  GetIngestConfigurationCommand,
  GetParticipantCommand,
  GetPublicKeyCommand,
  GetStageCommand,
  GetStageSessionCommand,
  GetStorageConfigurationCommand,
  ImportPublicKeyCommand,
  ListCompositionsCommand,
  ListEncoderConfigurationsCommand,
  ListIngestConfigurationsCommand,
  ListParticipantEventsCommand,
  ListParticipantReplicasCommand,
  ListParticipantsCommand,
  ListPublicKeysCommand,
  ListStageSessionsCommand,
  ListStagesCommand,
  ListStorageConfigurationsCommand,
  ListTagsForResourceCommand,
  StartCompositionCommand,
  StartParticipantReplicationCommand,
  StopCompositionCommand,
  StopParticipantReplicationCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateIngestConfigurationCommand,
  UpdateStageCommand,
  paginateListCompositions,
  paginateListEncoderConfigurations,
  paginateListIngestConfigurations,
  paginateListParticipantEvents,
  paginateListParticipantReplicas,
  paginateListParticipants,
  paginateListPublicKeys,
  paginateListStageSessions,
  paginateListStages,
  paginateListStorageConfigurations,
  AccessDeniedException,
  ConflictException,
  InternalServerException,
  PendingVerification,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ValidationException,
  IngestProtocol,
  IngestConfigurationState,
  ParticipantTokenCapability,
  ParticipantRecordingMediaType,
  ThumbnailRecordingMode,
  ThumbnailStorageType,
  RecordingConfigurationFormat,
  DestinationState,
  VideoAspectRatio,
  VideoFillMode,
  PipBehavior,
  PipPosition,
  CompositionState,
  ParticipantProtocol,
  ParticipantRecordingState,
  ReplicationState,
  ReplicationType,
  ParticipantState,
  EventErrorCode,
  EventName,
  ParticipantRecordingFilterByRecordingState,
  IngestConfigurationFilterSensitiveLog,
  CreateIngestConfigurationResponseFilterSensitiveLog,
  ParticipantTokenFilterSensitiveLog,
  CreateParticipantTokenResponseFilterSensitiveLog,
  CreateStageResponseFilterSensitiveLog,
  GetIngestConfigurationResponseFilterSensitiveLog,
  UpdateIngestConfigurationResponseFilterSensitiveLog
});

